openapi: 3.0.2
info:
  title: Survey page
  description: This interface provides save surveys
  version: 0.1.9
servers:
  - url: '{protocol}://{server}:{port}'
    description: Survey page
paths:
  "/token":
    post:
      tags:
        - Auth
      operationId: "token"
      summary: Token
      description: Token for User
      requestBody:
        $ref: '#/components/requestBodies/TokenRequest'

      responses:
        '200':
          description: Token For user
          content:
            application/json:
              schema:
                type: "string"
  "/sign-up":
    post:
      tags:
        - Auth
      operationId: "sign-up"
      summary: sign-up
      description: sign-up User
      requestBody:
        $ref: '#/components/requestBodies/UserDto'
      responses:
        '200':
          description: sign-up user
          content:
            application/json:
              schema:
                type: "string"

  "/users":
    get:
      tags:
        - Users Report
      summary: Users Report
      operationId: "Users report"
      description: Allows to get Users report

      responses:
        "200":
          description: got Users report
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/requestBodies/UserDto'
              examples:
                usersExample:
                  value:
                    - login: BigBOy
                      password: Terminator111
                      email: asd@asd.com
                      firstName: Иван
                      lastName: Иванов
                      middleName: Иванович
                      birthday: "1971-01-01"
                    - login: LittleGirl
                      password: Password123
                      email: bbb@bbb.com
                      firstName: Анна
                      lastName: Петрова
                      middleName: Александровна
                      birthday: "1995-05-23"
  "/favorites":
    post:
      tags:
        - Favorites
      operationId: "save Favorites"
      summary: save Favorites
      description: save Favorites for User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavoriteDto'
            examples:
              favoriteExample:
                $ref: '#/components/examples/FavoriteDtoExample'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

components:
  requestBodies:
    TokenRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenRequest'
          examples:
            eventParametersExample:
              $ref: '#/components/examples/TokenRequest'
    UserDto:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserDto'
          examples:
            eventParametersExample:
              $ref: '#/components/examples/UserDto'
      required: true
      description: Event creation parameters
  schemas:
    TokenRequest:
      type: object
      properties:
        login:
          type: string
        password:
          type: string

      required:
        - login
        - password
      example: # Object-level
        login: BigBOy
        password: Terminator111
    FavoriteDto:
      type: object
      properties:
        favoriteDish:
          type: string
        favoriteColorHex:
          type: string
        favoriteSong:
          type: string
        favoriteDate:
          type: string
          format: date
        favoriteNumber:
          type: integer
      required:
        - favoriteDish
        - favoriteColorHex
        - favoriteSong
        - favoriteDate
        - favoriteNumber

    UserDto: # Schema name
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        email:
          {
            "type": "string",
            "pattern": "([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)"
          }
        firstName:
          {
            type: string,
            pattern: "^[А-Яа-я]+$"
          }
        lastName:
          {
            type: string,
            pattern: "^[А-Яа-я]+$"
          }
        middleName:
          {
            type: string,
            pattern: "^[А-Яа-я]+$"
          }
        birthday:
          type: string
          format: date
        favorite:
          {
            "$ref": "#/components/schemas/FavoriteDto"
          }
      required:
        - login
        - password
        - email
        - firstName
        - lastName
        - middleName
        - birthday
      example: # Object-level
        login: BigBOy
        password: Terminator111
        email: asd@asd.com
        firstName: Иван
        lastName: Иванов
        middleName: Иванович
        birthday: "1971-01-01"
  examples:
    UserDto:
      value:
        login: BigBOy
        password: Terminator111
        email: asd@asd.com
        firstName: Иван
        lastName: Иванов
        middleName: Иванович
        birthday: "1971-01-01"
    TokenRequest:
      value:
        login: BigBOy
        password: Terminator111
    FavoriteDtoExample:
      value:
        favoriteDish: "Pizza"
        favoriteColorHex: "#ff0000"
        favoriteSong: "Bohemian Rhapsody"
        favoriteDate: "2022-03-29"
        favoriteNumber: 42
